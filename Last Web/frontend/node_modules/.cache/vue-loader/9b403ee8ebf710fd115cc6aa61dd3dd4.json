{"remainingRequest":"C:\\Users\\boss\\OneDrive\\เอกสาร\\GitHub\\ExceptionKMITL\\Last Web\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\boss\\OneDrive\\เอกสาร\\GitHub\\ExceptionKMITL\\Last Web\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\boss\\OneDrive\\เอกสาร\\GitHub\\ExceptionKMITL\\Last Web\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\boss\\OneDrive\\เอกสาร\\GitHub\\ExceptionKMITL\\Last Web\\frontend\\src\\views\\Admin.vue?vue&type=template&id=54c38a05&scoped=true&","dependencies":[{"path":"C:\\Users\\boss\\OneDrive\\เอกสาร\\GitHub\\ExceptionKMITL\\Last Web\\frontend\\src\\views\\Admin.vue","mtime":1620302735860},{"path":"C:\\Users\\boss\\OneDrive\\เอกสาร\\GitHub\\ExceptionKMITL\\Last Web\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1618583560579},{"path":"C:\\Users\\boss\\OneDrive\\เอกสาร\\GitHub\\ExceptionKMITL\\Last Web\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1618583585613},{"path":"C:\\Users\\boss\\OneDrive\\เอกสาร\\GitHub\\ExceptionKMITL\\Last Web\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1618583560579},{"path":"C:\\Users\\boss\\OneDrive\\เอกสาร\\GitHub\\ExceptionKMITL\\Last Web\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1618583585610}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}