{"remainingRequest":"C:\\Users\\phala\\Documents\\GitHub\\ExceptionKMITL\\Last Web\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\phala\\Documents\\GitHub\\ExceptionKMITL\\Last Web\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\phala\\Documents\\GitHub\\ExceptionKMITL\\Last Web\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\phala\\Documents\\GitHub\\ExceptionKMITL\\Last Web\\frontend\\src\\views\\forum_manage.vue?vue&type=template&id=f5b3ec46&scoped=true&","dependencies":[{"path":"C:\\Users\\phala\\Documents\\GitHub\\ExceptionKMITL\\Last Web\\frontend\\src\\views\\forum_manage.vue","mtime":1620324116677},{"path":"C:\\Users\\phala\\Documents\\GitHub\\ExceptionKMITL\\Last Web\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\phala\\Documents\\GitHub\\ExceptionKMITL\\Last Web\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\phala\\Documents\\GitHub\\ExceptionKMITL\\Last Web\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\phala\\Documents\\GitHub\\ExceptionKMITL\\Last Web\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IGF0dHJzOiB7IGlkOiAiYm9keSIgfSB9LCBbCiAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImJhbm5lciIgfSwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRvcG5hdl9tYW5hZ2UiIH0sIFsKICAgICAgICBfdm0uX20oMCksCiAgICAgICAgX2MoInVsIiwgWwogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjbG9jayIsIGF0dHJzOiB7IGlkOiAiTXlDbG9ja0Rpc3BsYXkiIH0gfSksCiAgICAgICAgICBfdm0ubWFuYWdlX2FjYyA9PSAxCiAgICAgICAgICAgID8gX2MoImxpIiwgeyBhdHRyczogeyBpZDogImNvbXAxIiB9IH0sIFsKICAgICAgICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiL21hbmFnZVVzZXIiIH0gfSwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoIk1hbmFnZSBVc2VyIikKICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgIF92bS5tYW5hZ2Vfc3RhbmRhbmQgPT0gMQogICAgICAgICAgICA/IF9jKCJsaSIsIHsgYXR0cnM6IHsgaWQ6ICJjb21wMSIgfSB9LCBbCiAgICAgICAgICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogIi9tYW5hZ2Vmb3J1bSIgfSB9LCBbCiAgICAgICAgICAgICAgICAgIF92bS5fdigiTWFuYWdlIEZvcnVtIikKICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgIF92bS5tYW5hZ2Vfc3RhbmRhbmQgPT0gMQogICAgICAgICAgICA/IF9jKCJsaSIsIHsgYXR0cnM6IHsgaWQ6ICJjb21wMSIgfSB9LCBbCiAgICAgICAgICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogIi9tYW5hZ2VSZXBvcnQiIH0gfSwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoIk1hbmFnZSBSZXBvcnQiKQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJkcm9wZG93biIgfSwgWwogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAiYnV0dG9uIiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImJ0biBidG4tZGFuZ2VyICBkcm9wZG93bi10b2dnbGUiLAogICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgaWQ6ICJjb21wMyIsCiAgICAgICAgICAgICAgICAgIHR5cGU6ICJidXR0b24iLAogICAgICAgICAgICAgICAgICAiZGF0YS1icy10b2dnbGUiOiAiZHJvcGRvd24iLAogICAgICAgICAgICAgICAgICAiYXJpYS1leHBhbmRlZCI6ICJmYWxzZSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKCJpIiwgeyBzdGF0aWNDbGFzczogImZhIGZhLXVzZXItcGx1cyIgfSksCiAgICAgICAgICAgICAgICBfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS5pZCkgKyAiICIpCiAgICAgICAgICAgICAgXQogICAgICAgICAgICApLAogICAgICAgICAgICBfYygicCIsIHsgc3RhdGljQ2xhc3M6ICJkcm9wZG93bi1tZW51IiB9LCBbCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiYnV0dG9uIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJkcm9wZG93bi1pdGVtIHRleHQtZGFuZ2VyIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogImJ1dHRvbiIgfSwKICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmxvZ291dCgpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgW192bS5fdigi4Lit4Lit4LiB4LiI4Liy4LiB4Lij4Liw4Lia4LiaIildCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdKQogICAgICAgICAgXSkKICAgICAgICBdKQogICAgICBdKQogICAgXSksCiAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbnRhaW5lciIsIGF0dHJzOiB7IGlkOiAiYWxsX2ZvcnVtX21hbmFnZSIgfSB9LCBbCiAgICAgIF9jKCJwIiwgeyBhdHRyczogeyBpZDogImZvcnVtX21hbmFnZV90aXRsZSIgfSB9LCBbCiAgICAgICAgX3ZtLl92KCJNYW5hZ2UgZm9ydW0iKQogICAgICBdKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyb3ciIH0sIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC05IiB9LCBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgInRhYmxlIiwKICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogInRhYmxlIiwgYXR0cnM6IHsgaWQ6ICJmb3J1bV9tYW5hZ2VfdGFibGUiIH0gfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF92bS5fbSgxKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJ0Ym9keSIsCiAgICAgICAgICAgICAgICBfdm0uX2woX3ZtLmZpbHRlcmZvcnVtLCBmdW5jdGlvbihmb3J1bSkgewogICAgICAgICAgICAgICAgICByZXR1cm4gX2MoInRyIiwgeyBrZXk6IGZvcnVtLmZvcnVtX2lkIH0sIFsKICAgICAgICAgICAgICAgICAgICBfYygidGQiLCB7IGF0dHJzOiB7IGlkOiAidGFibGVfYm9keSIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKGZvcnVtLmZvcnVtX2lkKSkKICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICBfYygidGQiLCB7IGF0dHJzOiB7IGNvbHNwYW46ICIyIiwgaWQ6ICJ0YWJsZV9ib2R5IiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoZm9ydW0uZm9ydW1fdG9waWMpKQogICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgIF9jKCJ0ZCIsIHsgYXR0cnM6IHsgaWQ6ICJ0YWJsZV9ib2R5IiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAiYnV0dG9uIiwKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYnRuIGJ0bi1wcmltYXJ5IiwKICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgImRhdGEtdG9nZ2xlIjogIm1vZGFsIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkYXRhLXRhcmdldCI6ICIucGljdHVyZS1tb2RhbC14bCIKICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uZ290b3BpY3R1cmUoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ydW0uaW1hZ2VfYWRkcmVzcywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3J1bS5mb3J1bV90b3BpYwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCJjbGljayBoZXJlIildCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgX2MoInRkIiwgeyBhdHRyczogeyBpZDogInRhYmxlX2JvZHkiIH0gfSwgWwogICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJidG4gYnRuLXN1Y2Nlc3MiLAogICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogImJ0biIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGF0YS10b2dnbGUiOiAibW9kYWwiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgImRhdGEtdGFyZ2V0IjogIi5lZGl0LW1vZGFsLXhsIgogICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5lZGl0b3Blbihmb3J1bS5mb3J1bV9pZCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIkVkaXQiKV0KICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImJ0biBidG4tZGFuZ2VyIiwKICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICJidG4iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgImRhdGEtdG9nZ2xlIjogIm1vZGFsIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkYXRhLXRhcmdldCI6ICIjZGVsZXRlZm9ydW0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmRlbGV0ZW9wZW4oZm9ydW0uZm9ydW1faWQpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCJEZWxldGUiKV0KICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAwCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdCiAgICAgICAgICApCiAgICAgICAgXSksCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtMyIsIGF0dHJzOiB7IGlkOiAiZm9ydW1fdHlwZSIgfSB9LCBbCiAgICAgICAgICBfYygicCIsIHsgYXR0cnM6IHsgaWQ6ICJmb3J1bV9tYW5hZ2VfdHlwZV90aXRsZSIgfSB9LCBbCiAgICAgICAgICAgIF92bS5fdigi4LmA4Lil4Li34Lit4LiB4Lib4Lij4Liw4LmA4Lig4LiX4LiC4Lit4LiHIGZvcnVtIikKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJmb3JtLWNoZWNrIiB9LCBbCiAgICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5lZHVjYXRpb25fc2VsZWN0LAogICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiZWR1Y2F0aW9uX3NlbGVjdCIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZm9ybS1jaGVjay1pbnB1dCIsCiAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogImNoZWNrYm94IiwgaWQ6ICJlZHVjYXRpb25fY2hlY2tib3giIH0sCiAgICAgICAgICAgICAgZG9tUHJvcHM6IHsKICAgICAgICAgICAgICAgIGNoZWNrZWQ6IEFycmF5LmlzQXJyYXkoX3ZtLmVkdWNhdGlvbl9zZWxlY3QpCiAgICAgICAgICAgICAgICAgID8gX3ZtLl9pKF92bS5lZHVjYXRpb25fc2VsZWN0LCBudWxsKSA+IC0xCiAgICAgICAgICAgICAgICAgIDogX3ZtLmVkdWNhdGlvbl9zZWxlY3QKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICBjaGFuZ2U6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICB2YXIgJCRhID0gX3ZtLmVkdWNhdGlvbl9zZWxlY3QsCiAgICAgICAgICAgICAgICAgICAgJCRlbCA9ICRldmVudC50YXJnZXQsCiAgICAgICAgICAgICAgICAgICAgJCRjID0gJCRlbC5jaGVja2VkID8gdHJ1ZSA6IGZhbHNlCiAgICAgICAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KCQkYSkpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgJCR2ID0gbnVsbCwKICAgICAgICAgICAgICAgICAgICAgICQkaSA9IF92bS5faSgkJGEsICQkdikKICAgICAgICAgICAgICAgICAgICBpZiAoJCRlbC5jaGVja2VkKSB7CiAgICAgICAgICAgICAgICAgICAgICAkJGkgPCAwICYmIChfdm0uZWR1Y2F0aW9uX3NlbGVjdCA9ICQkYS5jb25jYXQoWyQkdl0pKQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAkJGkgPiAtMSAmJgogICAgICAgICAgICAgICAgICAgICAgICAoX3ZtLmVkdWNhdGlvbl9zZWxlY3QgPSAkJGEKICAgICAgICAgICAgICAgICAgICAgICAgICAuc2xpY2UoMCwgJCRpKQogICAgICAgICAgICAgICAgICAgICAgICAgIC5jb25jYXQoJCRhLnNsaWNlKCQkaSArIDEpKSkKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgX3ZtLmVkdWNhdGlvbl9zZWxlY3QgPSAkJGMKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSksCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJsYWJlbCIsCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJmb3JtLWNoZWNrLWxhYmVsIiwKICAgICAgICAgICAgICAgIGF0dHJzOiB7IGZvcjogImVkdWNhdGlvbl9jaGVja2JveCIgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgW192bS5fdigi4LiB4Liy4Lij4Lio4Li24LiB4Lip4LiyIChFZHVjYXRpb24pIildCiAgICAgICAgICAgICkKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJmb3JtLWNoZWNrIiB9LCBbCiAgICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5wYXJ0X3RpbWVfc2VsZWN0LAogICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAicGFydF90aW1lX3NlbGVjdCIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZm9ybS1jaGVjay1pbnB1dCIsCiAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogImNoZWNrYm94IiwgaWQ6ICJlZHVjYXRpb25fY2hlY2tib3giIH0sCiAgICAgICAgICAgICAgZG9tUHJvcHM6IHsKICAgICAgICAgICAgICAgIGNoZWNrZWQ6IEFycmF5LmlzQXJyYXkoX3ZtLnBhcnRfdGltZV9zZWxlY3QpCiAgICAgICAgICAgICAgICAgID8gX3ZtLl9pKF92bS5wYXJ0X3RpbWVfc2VsZWN0LCBudWxsKSA+IC0xCiAgICAgICAgICAgICAgICAgIDogX3ZtLnBhcnRfdGltZV9zZWxlY3QKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICBjaGFuZ2U6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICB2YXIgJCRhID0gX3ZtLnBhcnRfdGltZV9zZWxlY3QsCiAgICAgICAgICAgICAgICAgICAgJCRlbCA9ICRldmVudC50YXJnZXQsCiAgICAgICAgICAgICAgICAgICAgJCRjID0gJCRlbC5jaGVja2VkID8gdHJ1ZSA6IGZhbHNlCiAgICAgICAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KCQkYSkpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgJCR2ID0gbnVsbCwKICAgICAgICAgICAgICAgICAgICAgICQkaSA9IF92bS5faSgkJGEsICQkdikKICAgICAgICAgICAgICAgICAgICBpZiAoJCRlbC5jaGVja2VkKSB7CiAgICAgICAgICAgICAgICAgICAgICAkJGkgPCAwICYmIChfdm0ucGFydF90aW1lX3NlbGVjdCA9ICQkYS5jb25jYXQoWyQkdl0pKQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAkJGkgPiAtMSAmJgogICAgICAgICAgICAgICAgICAgICAgICAoX3ZtLnBhcnRfdGltZV9zZWxlY3QgPSAkJGEKICAgICAgICAgICAgICAgICAgICAgICAgICAuc2xpY2UoMCwgJCRpKQogICAgICAgICAgICAgICAgICAgICAgICAgIC5jb25jYXQoJCRhLnNsaWNlKCQkaSArIDEpKSkKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgX3ZtLnBhcnRfdGltZV9zZWxlY3QgPSAkJGMKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSksCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJsYWJlbCIsCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJmb3JtLWNoZWNrLWxhYmVsIiwKICAgICAgICAgICAgICAgIGF0dHJzOiB7IGZvcjogImVkdWNhdGlvbl9jaGVja2JveCIgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgW192bS5fdigi4LiH4Liy4LiZ4Lie4Liy4Lij4LmM4LiX4LmE4LiX4LiZ4LmMIChQYXJ0LXRpbWUgSm9iKSAiKV0KICAgICAgICAgICAgKQogICAgICAgICAgXSksCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImZvcm0tY2hlY2siIH0sIFsKICAgICAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmVudmlyb25tZW50X3NlbGVjdCwKICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImVudmlyb25tZW50X3NlbGVjdCIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZm9ybS1jaGVjay1pbnB1dCIsCiAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogImNoZWNrYm94IiwgaWQ6ICJlZHVjYXRpb25fY2hlY2tib3giIH0sCiAgICAgICAgICAgICAgZG9tUHJvcHM6IHsKICAgICAgICAgICAgICAgIGNoZWNrZWQ6IEFycmF5LmlzQXJyYXkoX3ZtLmVudmlyb25tZW50X3NlbGVjdCkKICAgICAgICAgICAgICAgICAgPyBfdm0uX2koX3ZtLmVudmlyb25tZW50X3NlbGVjdCwgbnVsbCkgPiAtMQogICAgICAgICAgICAgICAgICA6IF92bS5lbnZpcm9ubWVudF9zZWxlY3QKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICBjaGFuZ2U6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICB2YXIgJCRhID0gX3ZtLmVudmlyb25tZW50X3NlbGVjdCwKICAgICAgICAgICAgICAgICAgICAkJGVsID0gJGV2ZW50LnRhcmdldCwKICAgICAgICAgICAgICAgICAgICAkJGMgPSAkJGVsLmNoZWNrZWQgPyB0cnVlIDogZmFsc2UKICAgICAgICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoJCRhKSkgewogICAgICAgICAgICAgICAgICAgIHZhciAkJHYgPSBudWxsLAogICAgICAgICAgICAgICAgICAgICAgJCRpID0gX3ZtLl9pKCQkYSwgJCR2KQogICAgICAgICAgICAgICAgICAgIGlmICgkJGVsLmNoZWNrZWQpIHsKICAgICAgICAgICAgICAgICAgICAgICQkaSA8IDAgJiYgKF92bS5lbnZpcm9ubWVudF9zZWxlY3QgPSAkJGEuY29uY2F0KFskJHZdKSkKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgJCRpID4gLTEgJiYKICAgICAgICAgICAgICAgICAgICAgICAgKF92bS5lbnZpcm9ubWVudF9zZWxlY3QgPSAkJGEKICAgICAgICAgICAgICAgICAgICAgICAgICAuc2xpY2UoMCwgJCRpKQogICAgICAgICAgICAgICAgICAgICAgICAgIC5jb25jYXQoJCRhLnNsaWNlKCQkaSArIDEpKSkKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgX3ZtLmVudmlyb25tZW50X3NlbGVjdCA9ICQkYwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KSwKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImxhYmVsIiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImZvcm0tY2hlY2stbGFiZWwiLAogICAgICAgICAgICAgICAgYXR0cnM6IHsgZm9yOiAiZWR1Y2F0aW9uX2NoZWNrYm94IiB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbX3ZtLl92KCLguKrguKDguLLguJ7guYHguKfguJTguKXguYnguK3guKEgKGVudmlyb25tZW50KSAiKV0KICAgICAgICAgICAgKQogICAgICAgICAgXSksCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImZvcm0tY2hlY2siIH0sIFsKICAgICAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnJlZ2lzdGVyX3NlbGVjdCwKICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInJlZ2lzdGVyX3NlbGVjdCIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZm9ybS1jaGVjay1pbnB1dCIsCiAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogImNoZWNrYm94IiwgaWQ6ICJlZHVjYXRpb25fY2hlY2tib3giIH0sCiAgICAgICAgICAgICAgZG9tUHJvcHM6IHsKICAgICAgICAgICAgICAgIGNoZWNrZWQ6IEFycmF5LmlzQXJyYXkoX3ZtLnJlZ2lzdGVyX3NlbGVjdCkKICAgICAgICAgICAgICAgICAgPyBfdm0uX2koX3ZtLnJlZ2lzdGVyX3NlbGVjdCwgbnVsbCkgPiAtMQogICAgICAgICAgICAgICAgICA6IF92bS5yZWdpc3Rlcl9zZWxlY3QKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICBjaGFuZ2U6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICB2YXIgJCRhID0gX3ZtLnJlZ2lzdGVyX3NlbGVjdCwKICAgICAgICAgICAgICAgICAgICAkJGVsID0gJGV2ZW50LnRhcmdldCwKICAgICAgICAgICAgICAgICAgICAkJGMgPSAkJGVsLmNoZWNrZWQgPyB0cnVlIDogZmFsc2UKICAgICAgICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoJCRhKSkgewogICAgICAgICAgICAgICAgICAgIHZhciAkJHYgPSBudWxsLAogICAgICAgICAgICAgICAgICAgICAgJCRpID0gX3ZtLl9pKCQkYSwgJCR2KQogICAgICAgICAgICAgICAgICAgIGlmICgkJGVsLmNoZWNrZWQpIHsKICAgICAgICAgICAgICAgICAgICAgICQkaSA8IDAgJiYgKF92bS5yZWdpc3Rlcl9zZWxlY3QgPSAkJGEuY29uY2F0KFskJHZdKSkKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgJCRpID4gLTEgJiYKICAgICAgICAgICAgICAgICAgICAgICAgKF92bS5yZWdpc3Rlcl9zZWxlY3QgPSAkJGEKICAgICAgICAgICAgICAgICAgICAgICAgICAuc2xpY2UoMCwgJCRpKQogICAgICAgICAgICAgICAgICAgICAgICAgIC5jb25jYXQoJCRhLnNsaWNlKCQkaSArIDEpKSkKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgX3ZtLnJlZ2lzdGVyX3NlbGVjdCA9ICQkYwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KSwKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImxhYmVsIiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImZvcm0tY2hlY2stbGFiZWwiLAogICAgICAgICAgICAgICAgYXR0cnM6IHsgZm9yOiAiZWR1Y2F0aW9uX2NoZWNrYm94IiB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbX3ZtLl92KCLguIHguLLguKPguKXguIfguJfguLDguYDguJrguLXguKLguJnguYDguKPguLXguKLguJkgKFJlZ2lzdGVyKSAiKV0KICAgICAgICAgICAgKQogICAgICAgICAgXSksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImZvcm0tY2hlY2siLAogICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7ICJtYXJnaW4tYm90dG9tIjogIjQlIiB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBuYW1lOiAibW9kZWwiLAogICAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnNjaG9sYXJzaGlwX3NlbGVjdCwKICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAic2Nob2xhcnNoaXBfc2VsZWN0IgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJmb3JtLWNoZWNrLWlucHV0IiwKICAgICAgICAgICAgICAgIGF0dHJzOiB7IHR5cGU6ICJjaGVja2JveCIsIGlkOiAiZWR1Y2F0aW9uX2NoZWNrYm94IiB9LAogICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsKICAgICAgICAgICAgICAgICAgY2hlY2tlZDogQXJyYXkuaXNBcnJheShfdm0uc2Nob2xhcnNoaXBfc2VsZWN0KQogICAgICAgICAgICAgICAgICAgID8gX3ZtLl9pKF92bS5zY2hvbGFyc2hpcF9zZWxlY3QsIG51bGwpID4gLTEKICAgICAgICAgICAgICAgICAgICA6IF92bS5zY2hvbGFyc2hpcF9zZWxlY3QKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICBjaGFuZ2U6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgIHZhciAkJGEgPSBfdm0uc2Nob2xhcnNoaXBfc2VsZWN0LAogICAgICAgICAgICAgICAgICAgICAgJCRlbCA9ICRldmVudC50YXJnZXQsCiAgICAgICAgICAgICAgICAgICAgICAkJGMgPSAkJGVsLmNoZWNrZWQgPyB0cnVlIDogZmFsc2UKICAgICAgICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSgkJGEpKSB7CiAgICAgICAgICAgICAgICAgICAgICB2YXIgJCR2ID0gbnVsbCwKICAgICAgICAgICAgICAgICAgICAgICAgJCRpID0gX3ZtLl9pKCQkYSwgJCR2KQogICAgICAgICAgICAgICAgICAgICAgaWYgKCQkZWwuY2hlY2tlZCkgewogICAgICAgICAgICAgICAgICAgICAgICAkJGkgPCAwICYmIChfdm0uc2Nob2xhcnNoaXBfc2VsZWN0ID0gJCRhLmNvbmNhdChbJCR2XSkpCiAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAkJGkgPiAtMSAmJgogICAgICAgICAgICAgICAgICAgICAgICAgIChfdm0uc2Nob2xhcnNoaXBfc2VsZWN0ID0gJCRhCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuc2xpY2UoMCwgJCRpKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgLmNvbmNhdCgkJGEuc2xpY2UoJCRpICsgMSkpKQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICBfdm0uc2Nob2xhcnNoaXBfc2VsZWN0ID0gJCRjCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAibGFiZWwiLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImZvcm0tY2hlY2stbGFiZWwiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyBmb3I6ICJlZHVjYXRpb25fY2hlY2tib3giIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBbX3ZtLl92KCLguJfguLjguJnguIHguLLguKPguKjguLbguIHguKnguLIgKFNjaG9sYXJzaGlwKSAiKV0KICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0KICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImJ0biBidG4tc3VjY2VzcyIsCiAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgIGlkOiAiYnRuX2NyZWF0ZSIsCiAgICAgICAgICAgICAgICAiZGF0YS10b2dnbGUiOiAibW9kYWwiLAogICAgICAgICAgICAgICAgImRhdGEtdGFyZ2V0IjogIi5jcmVhdGUtbW9kYWwteGwiCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBvbjogeyBjbGljazogX3ZtLmNsb3NlX21vZGFsX2J1dHRvbiB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFtfdm0uX3YoIkNyZWF0ZSIpXQogICAgICAgICAgKQogICAgICAgIF0pCiAgICAgIF0pCiAgICBdKSwKICAgIF9jKAogICAgICAiZGl2IiwKICAgICAgewogICAgICAgIHN0YXRpY0NsYXNzOiAibW9kYWwgZmFkZSBwaWN0dXJlLW1vZGFsLXhsIiwKICAgICAgICBhdHRyczogeyB0YWJpbmRleDogIi0xIiwgcm9sZTogImRpYWxvZyIsICJhcmlhLWhpZGRlbiI6ICJ0cnVlIiB9CiAgICAgIH0sCiAgICAgIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm1vZGFsLWRpYWxvZyBtb2RhbC14bCIgfSwgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAibW9kYWwtY29udGVudCIsIGF0dHJzOiB7IGlkOiAiYWxsbW9kYWwiIH0gfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJwIiwgeyBhdHRyczogeyBpZDogIm1vZGFsX3RpdGxlIiB9IH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoX3ZtLmZvcnVtX3RvcGljKSkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygiaW1nIiwgeyBhdHRyczogeyBzcmM6IF92bS5pbWFnZV9hZGRyZXNzIH0gfSkKICAgICAgICAgICAgXQogICAgICAgICAgKQogICAgICAgIF0pCiAgICAgIF0KICAgICksCiAgICBfYygKICAgICAgImRpdiIsCiAgICAgIHsKICAgICAgICBzdGF0aWNDbGFzczogIm1vZGFsIGZhZGUgY3JlYXRlLW1vZGFsLXhsIiwKICAgICAgICBhdHRyczogewogICAgICAgICAgdGFiaW5kZXg6ICItMSIsCiAgICAgICAgICByb2xlOiAiZGlhbG9nIiwKICAgICAgICAgICJhcmlhLWhpZGRlbiI6ICJ0cnVlIiwKICAgICAgICAgIGlkOiAiY3JlYXRlbW9kYWwiCiAgICAgICAgfQogICAgICB9LAogICAgICBbCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJtb2RhbC1kaWFsb2cgbW9kYWwteGwiIH0sIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogIm1vZGFsLWNvbnRlbnQiLCBhdHRyczogeyBpZDogImFsbG1vZGFsIiB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygicCIsIHsgYXR0cnM6IHsgaWQ6ICJtb2RhbF90aXRsZSIgfSB9LCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoIuC4quC4o+C5ieC4suC4h+C4guC5iOC4suC4p+C4m+C4o+C4sOC4iuC4suC4quC4seC4oeC4nuC4seC4meC4mOC5jOC5g+C4q+C4oeC5iCIpCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJmb3JtLWdyb3VwIHJvdyIgfSwgWwogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJsYWJlbCIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImNvbC1zbS0xIGNvbC1mb3JtLWxhYmVsIiwKICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBmb3I6ICJpbnB1dHRvcGljIiB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIuC4q+C4seC4p+C4guC5ieC4rSIpXQogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImNvbC1zbS0xMSIgfSwKICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uJHYuZm9ydW1fdG9waWMuJG1vZGVsLAogICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICIkdi5mb3J1bV90b3BpYy4kbW9kZWwiCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImZvcm0tY29udHJvbCIsCiAgICAgICAgICAgICAgICAgICAgICBjbGFzczogeyAiaXMtaW52YWxpZCI6IF92bS4kdi5mb3J1bV90b3BpYy4kZXJyb3IgfSwKICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICJ0ZXh0IiwKICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICJpbnB1dHRvcGljIiwKICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6ICLguYPguKrguYjguKvguLHguKfguILguYnguK3guJfguLXguYjguJnguLXguYgiCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS4kdi5mb3J1bV90b3BpYy4kbW9kZWwgfSwKICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0OiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHNldCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kdi5mb3J1bV90b3BpYywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICIkbW9kZWwiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnRhcmdldC52YWx1ZQogICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAgIF92bS4kdi5mb3J1bV90b3BpYy4kZXJyb3IKICAgICAgICAgICAgICAgICAgICAgID8gWwogICAgICAgICAgICAgICAgICAgICAgICAgICFfdm0uJHYuZm9ydW1fdG9waWMucmVxdWlyZWQKICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoInAiLCB7IGF0dHJzOiB7IGlkOiAiZXJyb3ItbWVzc2FnZSIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIq4LiB4Lij4Li44LiT4Liy4LmA4LiV4Li04Lih4LiC4LmJ4Lit4Lih4Li54Lil4LmD4LiZ4LiK4LmI4Lit4LiH4LiZ4Li14LmJIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgIV92bS4kdi5mb3J1bV90b3BpYy5taW5MZW5ndGgKICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoInAiLCB7IGF0dHJzOiB7IGlkOiAiZXJyb3ItbWVzc2FnZSIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIirguYDguJnguLfguYnguK3guKvguLLguITguKfguKPguKHguLXguITguKfguLLguKHguKLguLLguKfguYTguKHguYjguJXguYjguLPguIHguKfguYjguLIgMTAg4LiV4Lix4Lin4Lit4Lix4LiB4Lip4LijIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgIV92bS4kdi5mb3J1bV90b3BpYy5tYXhMZW5ndGgKICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoInAiLCB7IGF0dHJzOiB7IGlkOiAiZXJyb3ItbWVzc2FnZSIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIirguYDguJnguLfguYnguK3guKvguLLguITguKfguKPguKHguLXguITguKfguLLguKHguKLguLLguKfguYTguKHguYjguYDguIHguLTguJkgMjU1IOC4leC4seC4p+C4reC4seC4geC4qeC4oyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpCiAgICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCkKICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgMgogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiZm9ybS1ncm91cCIgfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoImxhYmVsIiwgeyBhdHRyczogeyBmb3I6ICJyZXBvcnRfdG9waWMiIH0gfSwgWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigi4LmA4LiZ4Li34LmJ4Lit4Lir4LiyIikKICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgIF9jKCJ0ZXh0YXJlYSIsIHsKICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS4kdi5mb3J1bV9kZXNjcmlwdGlvbi4kbW9kZWwsCiAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICIkdi5mb3J1bV9kZXNjcmlwdGlvbi4kbW9kZWwiCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImZvcm0tY29udHJvbCIsCiAgICAgICAgICAgICAgICAgICAgY2xhc3M6IHsgImlzLWludmFsaWQiOiBfdm0uJHYuZm9ydW1fZGVzY3JpcHRpb24uJGVycm9yIH0sCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgIGlkOiAicmVwb3J0X2Rlc2NyaXB0aW9uIiwKICAgICAgICAgICAgICAgICAgICAgIHJvd3M6ICI1IiwKICAgICAgICAgICAgICAgICAgICAgICJhcmlhLWRlc2NyaWJlZGJ5IjogInJlcG9ydHRvcGljaGVscCIsCiAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogIuC5g+C4quC5iOC5gOC4meC4t+C5ieC4reC4q+C4suC4l+C4teC5iOC4meC4teC5iCIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0uJHYuZm9ydW1fZGVzY3JpcHRpb24uJG1vZGVsIH0sCiAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgIGlucHV0OiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQoCiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLiR2LmZvcnVtX2Rlc2NyaXB0aW9uLAogICAgICAgICAgICAgICAgICAgICAgICAgICIkbW9kZWwiLAogICAgICAgICAgICAgICAgICAgICAgICAgICRldmVudC50YXJnZXQudmFsdWUKICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgIF92bS4kdi5mb3J1bV9kZXNjcmlwdGlvbi4kZXJyb3IKICAgICAgICAgICAgICAgICAgICA/IFsKICAgICAgICAgICAgICAgICAgICAgICAgIV92bS4kdi5mb3J1bV9kZXNjcmlwdGlvbi5yZXF1aXJlZAogICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoInAiLCB7IGF0dHJzOiB7IGlkOiAiZXJyb3ItbWVzc2FnZSIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiKuC4geC4o+C4uOC4k+C4suC5gOC4leC4tOC4oeC4guC5ieC4reC4oeC4ueC4peC5g+C4meC4iuC5iOC4reC4h+C4meC4teC5iSIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICAgICAgICAgICFfdm0uJHYuZm9ydW1fZGVzY3JpcHRpb24ubWluTGVuZ3RoCiAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygicCIsIHsgYXR0cnM6IHsgaWQ6ICJlcnJvci1tZXNzYWdlIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICIq4LmA4LiZ4Li34LmJ4Lit4Lir4Liy4LiE4Lin4Lij4Lih4Li14LiE4Lin4Liy4Lih4Lii4Liy4Lin4LmE4Lih4LmI4LiV4LmI4Liz4LiB4Lin4LmI4LiyIDUwIOC4leC4seC4p+C4reC4seC4geC4qeC4oyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpCiAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDIKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZm9ybS1ncm91cCIgfSwgWwogICAgICAgICAgICAgICAgX2MoInAiLCBbX3ZtLl92KCLguJvguKPguLDguYDguKDguJciKV0pLAogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJidG4iLAogICAgICAgICAgICAgICAgICAgIGNsYXNzOiB7CiAgICAgICAgICAgICAgICAgICAgICAiYnRuLXByaW1hcnkiOiBfdm0uZm9ydW1fdHlwZSA9PSAi4LiB4Liy4Lij4Lio4Li24LiB4Lip4LiyIiwKICAgICAgICAgICAgICAgICAgICAgICJidG4tc2Vjb25kYXJ5IjogX3ZtLmZvcnVtX3R5cGUgIT0gIuC4geC4suC4o+C4qOC4tuC4geC4qeC4siIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiAidHlwZV9idXR0b24iIH0sCiAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmZvcnVtX3R5cGUgPSAi4LiB4Liy4Lij4Lio4Li24LiB4Lip4LiyIgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgW192bS5fdigi4LiB4Liy4Lij4Lio4Li24LiB4Lip4LiyIildCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJidG4iLAogICAgICAgICAgICAgICAgICAgIGNsYXNzOiB7CiAgICAgICAgICAgICAgICAgICAgICAiYnRuLXByaW1hcnkiOiBfdm0uZm9ydW1fdHlwZSA9PSAi4LiH4Liy4LiZ4Lie4Liy4Lij4LmM4LiX4LmE4LiX4LiZ4LmMIiwKICAgICAgICAgICAgICAgICAgICAgICJidG4tc2Vjb25kYXJ5IjogX3ZtLmZvcnVtX3R5cGUgIT0gIuC4h+C4suC4meC4nuC4suC4o+C5jOC4l+C5hOC4l+C4meC5jCIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiAidHlwZV9idXR0b24iIH0sCiAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmZvcnVtX3R5cGUgPSAi4LiH4Liy4LiZ4Lie4Liy4Lij4LmM4LiX4LmE4LiX4LiZ4LmMIgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgW192bS5fdigi4LiH4Liy4LiZ4Lie4Liy4Lij4LmM4LiX4LmE4LiX4LiZ4LmMIildCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJidG4iLAogICAgICAgICAgICAgICAgICAgIGNsYXNzOiB7CiAgICAgICAgICAgICAgICAgICAgICAiYnRuLXByaW1hcnkiOiBfdm0uZm9ydW1fdHlwZSA9PSAi4Liq4Lig4Liy4Lie4LmB4Lin4LiU4Lil4LmJ4Lit4LihIiwKICAgICAgICAgICAgICAgICAgICAgICJidG4tc2Vjb25kYXJ5IjogX3ZtLmZvcnVtX3R5cGUgIT0gIuC4quC4oOC4suC4nuC5geC4p+C4lOC4peC5ieC4reC4oSIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiAidHlwZV9idXR0b24iIH0sCiAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmZvcnVtX3R5cGUgPSAi4Liq4Lig4Liy4Lie4LmB4Lin4LiU4Lil4LmJ4Lit4LihIgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgW192bS5fdigi4Liq4Lig4Liy4Lie4LmB4Lin4LiU4Lil4LmJ4Lit4LihIildCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJidG4iLAogICAgICAgICAgICAgICAgICAgIGNsYXNzOiB7CiAgICAgICAgICAgICAgICAgICAgICAiYnRuLXByaW1hcnkiOiBfdm0uZm9ydW1fdHlwZSA9PSAi4LiB4Liy4Lij4Lil4LiH4LiX4Liw4LmA4Lia4Li14Lii4LiZIiwKICAgICAgICAgICAgICAgICAgICAgICJidG4tc2Vjb25kYXJ5IjogX3ZtLmZvcnVtX3R5cGUgIT0gIuC4geC4suC4o+C4peC4h+C4l+C4sOC5gOC4muC4teC4ouC4mSIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiAidHlwZV9idXR0b24iIH0sCiAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmZvcnVtX3R5cGUgPSAi4LiB4Liy4Lij4Lil4LiH4LiX4Liw4LmA4Lia4Li14Lii4LiZIgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgW192bS5fdigi4LiB4Liy4Lij4Lil4LiH4LiX4Liw4LmA4Lia4Li14Lii4LiZIildCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJidG4iLAogICAgICAgICAgICAgICAgICAgIGNsYXNzOiB7CiAgICAgICAgICAgICAgICAgICAgICAiYnRuLXByaW1hcnkiOiBfdm0uZm9ydW1fdHlwZSA9PSAi4LiX4Li44LiZ4LiB4Liy4Lij4Lio4Li24LiB4Lip4LiyIiwKICAgICAgICAgICAgICAgICAgICAgICJidG4tc2Vjb25kYXJ5IjogX3ZtLmZvcnVtX3R5cGUgIT0gIuC4l+C4uOC4meC4geC4suC4o+C4qOC4tuC4geC4qeC4siIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiAidHlwZV9idXR0b24iIH0sCiAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmZvcnVtX3R5cGUgPSAi4LiX4Li44LiZ4LiB4Liy4Lij4Lio4Li24LiB4Lip4LiyIgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgW192bS5fdigi4LiX4Li44LiZ4LiB4Liy4Lij4Lio4Li24LiB4Lip4LiyIildCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX3ZtLiR2LmZvcnVtX3R5cGUuJGVycm9yCiAgICAgICAgICAgICAgICA/IFsKICAgICAgICAgICAgICAgICAgICAhX3ZtLiR2LmZvcnVtX3R5cGUucmVxdWlyZWQKICAgICAgICAgICAgICAgICAgICAgID8gX2MoInAiLCB7IGF0dHJzOiB7IGlkOiAiZXJyb3ItbWVzc2FnZSIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIq4LiB4Lij4Li44LiT4Liy4LmA4LiV4Li04Lih4LiC4LmJ4Lit4Lih4Li54Lil4LmD4LiZ4LiK4LmI4Lit4LiH4LiZ4Li14LmJIikKICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCkKICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImZvcm0tZ3JvdXAgcm93IiB9LCBbCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgImxhYmVsIiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiY29sLXNtLTMgY29sLWZvcm0tbGFiZWwiLAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGZvcjogImlucHV0dG9waWMiIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgW192bS5fdigiTGluayDguKPguLnguJvguKDguLLguJ7guJvguKPguLDguIHguK3guJoiKV0KICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjb2wtc20tOSIgfSwKICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uJHYuaW1hZ2VfYWRkcmVzcy4kbW9kZWwsCiAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogIiR2LmltYWdlX2FkZHJlc3MuJG1vZGVsIgogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJmb3JtLWNvbnRyb2wiLAogICAgICAgICAgICAgICAgICAgICAgY2xhc3M6IHsgImlzLWludmFsaWQiOiBfdm0uJHYuaW1hZ2VfYWRkcmVzcy4kZXJyb3IgfSwKICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICJ0ZXh0IiwKICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICJpbnB1dHRvcGljIiwKICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6ICLguYPguKrguYjguKXguLTguYnguIfguITguYzguJfguLXguYjguJnguLXguYgiCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS4kdi5pbWFnZV9hZGRyZXNzLiRtb2RlbCB9LAogICAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kc2V0KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLiR2LmltYWdlX2FkZHJlc3MsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiJG1vZGVsIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICRldmVudC50YXJnZXQudmFsdWUKICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICBfdm0uJHYuaW1hZ2VfYWRkcmVzcy4kZXJyb3IKICAgICAgICAgICAgICAgICAgICAgID8gWwogICAgICAgICAgICAgICAgICAgICAgICAgICFfdm0uJHYuaW1hZ2VfYWRkcmVzcy5yZXF1aXJlZAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygicCIsIHsgYXR0cnM6IHsgaWQ6ICJlcnJvci1tZXNzYWdlIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIirguIHguKPguLjguJPguLLguYDguJXguLTguKHguILguYnguK3guKHguLnguKXguYPguJnguIrguYjguK3guIfguJnguLXguYkiKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAhX3ZtLiR2LmltYWdlX2FkZHJlc3MudXJsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKCJwIiwgeyBhdHRyczogeyBpZDogImVycm9yLW1lc3NhZ2UiIH0gfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiKuC4leC5ieC4reC4h+C5g+C4quC5iOC5gOC4m+C5h+C4mSB1cmwg4LmA4LiX4LmI4Liy4LiZ4Lix4LmJ4LiZIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCkKICAgICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAyCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJmb3JtLWdyb3VwIiB9LCBbCiAgICAgICAgICAgICAgICBfYygicCIsIFtfdm0uX3YoIuC4m+C4o+C4sOC5gOC4oOC4lyIpXSksCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImJ0biBidG4tc3VjY2VzcyIsCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJzdWJtaXRfYnRuIiwgImRhdGEtZGlzbWlzcyI6ICJtb2RhbCIgfSwKICAgICAgICAgICAgICAgICAgICBvbjogeyBjbGljazogX3ZtLnJlYWxjcmVhdGUgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbX3ZtLl92KCLguKrguKPguYnguLLguIciKV0KICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImJ0biBidG4tc2Vjb25kYXJ5IiwKICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBpZDogInN1Ym1pdF9idG4iLCAiZGF0YS1kaXNtaXNzIjogIm1vZGFsIiB9LAogICAgICAgICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0uY2xvc2VfbW9kYWxfYnV0dG9uIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgW192bS5fdigi4Lib4Li04LiUIildCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMgogICAgICAgICAgKQogICAgICAgIF0pCiAgICAgIF0KICAgICksCiAgICBfYygKICAgICAgImRpdiIsCiAgICAgIHsKICAgICAgICBzdGF0aWNDbGFzczogIm1vZGFsIGZhZGUgZWRpdC1tb2RhbC14bCIsCiAgICAgICAgYXR0cnM6IHsgdGFiaW5kZXg6ICItMSIsIHJvbGU6ICJkaWFsb2ciLCAiYXJpYS1oaWRkZW4iOiAidHJ1ZSIgfQogICAgICB9LAogICAgICBbCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJtb2RhbC1kaWFsb2cgbW9kYWwteGwiIH0sIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogIm1vZGFsLWNvbnRlbnQiLCBhdHRyczogeyBpZDogImFsbG1vZGFsIiB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygicCIsIHsgYXR0cnM6IHsgaWQ6ICJtb2RhbF90aXRsZSIgfSB9LCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoIuC4geC4suC4o+C5geC4geC5ieC5hOC4guC4guC5iOC4suC4p+C4m+C4o+C4sOC4iuC4suC4quC4seC4oeC4nuC4seC4meC4mOC5jCIpCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJmb3JtLWdyb3VwIHJvdyIgfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgImxhYmVsIiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImNvbC1zbS0xIGNvbC1mb3JtLWxhYmVsIiwKICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGZvcjogImlucHV0dG9waWMiIH0KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIuC4q+C4seC4p+C4guC5ieC4rSIpXQogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC1zbS0xMSIgfSwgWwogICAgICAgICAgICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uJHYuZm9ydW1fdG9waWMuJG1vZGVsLAogICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICIkdi5mb3J1bV90b3BpYy4kbW9kZWwiCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImZvcm0tY29udHJvbCIsCiAgICAgICAgICAgICAgICAgICAgICBjbGFzczogeyAiaXMtaW52YWxpZCI6IF92bS4kdi5mb3J1bV90b3BpYy4kZXJyb3IgfSwKICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICJ0ZXh0IiwKICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICJpbnB1dHRvcGljIiwKICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6ICLguYPguKrguYjguKvguLHguKfguILguYnguK3guJfguLXguYjguJnguLXguYgiCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS4kdi5mb3J1bV90b3BpYy4kbW9kZWwgfSwKICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0OiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHNldCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kdi5mb3J1bV90b3BpYywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICIkbW9kZWwiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnRhcmdldC52YWx1ZQogICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfdm0uJHYuZm9ydW1fdG9waWMuJGVycm9yCiAgICAgICAgICAgICAgICAgICAgPyBbCiAgICAgICAgICAgICAgICAgICAgICAgICFfdm0uJHYuZm9ydW1fdG9waWMucmVxdWlyZWQKICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKCJwIiwgeyBhdHRyczogeyBpZDogImVycm9yLW1lc3NhZ2UiIH0gfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIirguIHguKPguLjguJPguLLguYDguJXguLTguKHguILguYnguK3guKHguLnguKXguYPguJnguIrguYjguK3guIfguJnguLXguYkiKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgICAgICAgICAgICAhX3ZtLiR2LmZvcnVtX3RvcGljLm1pbkxlbmd0aAogICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoInAiLCB7IGF0dHJzOiB7IGlkOiAiZXJyb3ItbWVzc2FnZSIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiKuC4q+C4seC4p+C4guC5ieC4reC4hOC4p+C4o+C4oeC4teC4hOC4p+C4suC4oeC4ouC4suC4p+C5hOC4oeC5iOC4leC5iOC4s+C4geC4p+C5iOC4siAxMCDguJXguLHguKfguK3guLHguIHguKnguKMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgICAgICAgICAgIV92bS4kdi5mb3J1bV90b3BpYy5tYXhMZW5ndGgKICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKCJwIiwgeyBhdHRyczogeyBpZDogImVycm9yLW1lc3NhZ2UiIH0gfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIirguYDguJnguLfguYnguK3guKvguLLguITguKfguKPguKHguLXguITguKfguLLguKHguKLguLLguKfguYTguKHguYjguYDguIHguLTguJkgMjU1IOC4leC4seC4p+C4reC4seC4geC4qeC4oyIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCkKICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMgogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJmb3JtLWdyb3VwIiB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygibGFiZWwiLCB7IGF0dHJzOiB7IGZvcjogInJlcG9ydF90b3BpYyIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCLguYDguJnguLfguYnguK3guKvguLIiKQogICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgX2MoInRleHRhcmVhIiwgewogICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLiR2LmZvcnVtX2Rlc2NyaXB0aW9uLiRtb2RlbCwKICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogIiR2LmZvcnVtX2Rlc2NyaXB0aW9uLiRtb2RlbCIKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZm9ybS1jb250cm9sIiwKICAgICAgICAgICAgICAgICAgICBjbGFzczogeyAiaXMtaW52YWxpZCI6IF92bS4kdi5mb3J1bV9kZXNjcmlwdGlvbi4kZXJyb3IgfSwKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgaWQ6ICJyZXBvcnRfZGVzY3JpcHRpb24iLAogICAgICAgICAgICAgICAgICAgICAgcm93czogIjUiLAogICAgICAgICAgICAgICAgICAgICAgImFyaWEtZGVzY3JpYmVkYnkiOiAicmVwb3J0dG9waWNoZWxwIiwKICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAi4LmD4Liq4LmI4LmA4LiZ4Li34LmJ4Lit4Lir4Liy4LiX4Li14LmI4LiZ4Li14LmIIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS4kdi5mb3J1bV9kZXNjcmlwdGlvbi4kbW9kZWwgfSwKICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHNldCgKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHYuZm9ydW1fZGVzY3JpcHRpb24sCiAgICAgICAgICAgICAgICAgICAgICAgICAgIiRtb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnRhcmdldC52YWx1ZQogICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgX3ZtLiR2LmZvcnVtX2Rlc2NyaXB0aW9uLiRlcnJvcgogICAgICAgICAgICAgICAgICAgID8gWwogICAgICAgICAgICAgICAgICAgICAgICAhX3ZtLiR2LmZvcnVtX2Rlc2NyaXB0aW9uLnJlcXVpcmVkCiAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygicCIsIHsgYXR0cnM6IHsgaWQ6ICJlcnJvci1tZXNzYWdlIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIq4LiB4Lij4Li44LiT4Liy4LmA4LiV4Li04Lih4LiC4LmJ4Lit4Lih4Li54Lil4LmD4LiZ4LiK4LmI4Lit4LiH4LiZ4Li14LmJIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgICAgICAgICAgIV92bS4kdi5mb3J1bV9kZXNjcmlwdGlvbi5taW5MZW5ndGgKICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKCJwIiwgeyBhdHRyczogeyBpZDogImVycm9yLW1lc3NhZ2UiIH0gfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIirguYDguJnguLfguYnguK3guKvguLLguITguKfguKPguKHguLXguITguKfguLLguKHguKLguLLguKfguYTguKHguYjguJXguYjguLPguIHguKfguYjguLIgNTAg4LiV4Lix4Lin4Lit4Lix4LiB4Lip4LijIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCkKICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMgogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgX2MoImJyIiksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJmb3JtLWdyb3VwIiB9LCBbCiAgICAgICAgICAgICAgICBfYygicCIsIFtfdm0uX3YoIuC4m+C4o+C4sOC5gOC4oOC4lyIpXSksCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImJ0biIsCiAgICAgICAgICAgICAgICAgICAgY2xhc3M6IHsKICAgICAgICAgICAgICAgICAgICAgICJidG4tcHJpbWFyeSI6IF92bS5mb3J1bV90eXBlID09ICLguIHguLLguKPguKjguLbguIHguKnguLIiLAogICAgICAgICAgICAgICAgICAgICAgImJ0bi1zZWNvbmRhcnkiOiBfdm0uZm9ydW1fdHlwZSAhPSAi4LiB4Liy4Lij4Lio4Li24LiB4Lip4LiyIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJ0eXBlX2J1dHRvbiIgfSwKICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICBfdm0uZm9ydW1fdHlwZSA9ICLguIHguLLguKPguKjguLbguIHguKnguLIiCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbX3ZtLl92KCLguIHguLLguKPguKjguLbguIHguKnguLIiKV0KICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImJ0biIsCiAgICAgICAgICAgICAgICAgICAgY2xhc3M6IHsKICAgICAgICAgICAgICAgICAgICAgICJidG4tcHJpbWFyeSI6IF92bS5mb3J1bV90eXBlID09ICLguIfguLLguJnguJ7guLLguKPguYzguJfguYTguJfguJnguYwiLAogICAgICAgICAgICAgICAgICAgICAgImJ0bi1zZWNvbmRhcnkiOiBfdm0uZm9ydW1fdHlwZSAhPSAi4LiH4Liy4LiZ4Lie4Liy4Lij4LmM4LiX4LmE4LiX4LiZ4LmMIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJ0eXBlX2J1dHRvbiIgfSwKICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICBfdm0uZm9ydW1fdHlwZSA9ICLguIfguLLguJnguJ7guLLguKPguYzguJfguYTguJfguJnguYwiCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbX3ZtLl92KCLguIfguLLguJnguJ7guLLguKPguYzguJfguYTguJfguJnguYwiKV0KICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImJ0biIsCiAgICAgICAgICAgICAgICAgICAgY2xhc3M6IHsKICAgICAgICAgICAgICAgICAgICAgICJidG4tcHJpbWFyeSI6IF92bS5mb3J1bV90eXBlID09ICLguKrguKDguLLguJ7guYHguKfguJTguKXguYnguK3guKEiLAogICAgICAgICAgICAgICAgICAgICAgImJ0bi1zZWNvbmRhcnkiOiBfdm0uZm9ydW1fdHlwZSAhPSAi4Liq4Lig4Liy4Lie4LmB4Lin4LiU4Lil4LmJ4Lit4LihIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJ0eXBlX2J1dHRvbiIgfSwKICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICBfdm0uZm9ydW1fdHlwZSA9ICLguKrguKDguLLguJ7guYHguKfguJTguKXguYnguK3guKEiCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbX3ZtLl92KCLguKrguKDguLLguJ7guYHguKfguJTguKXguYnguK3guKEiKV0KICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImJ0biIsCiAgICAgICAgICAgICAgICAgICAgY2xhc3M6IHsKICAgICAgICAgICAgICAgICAgICAgICJidG4tcHJpbWFyeSI6IF92bS5mb3J1bV90eXBlID09ICLguIHguLLguKPguKXguIfguJfguLDguYDguJrguLXguKLguJkiLAogICAgICAgICAgICAgICAgICAgICAgImJ0bi1zZWNvbmRhcnkiOiBfdm0uZm9ydW1fdHlwZSAhPSAi4LiB4Liy4Lij4Lil4LiH4LiX4Liw4LmA4Lia4Li14Lii4LiZIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJ0eXBlX2J1dHRvbiIgfSwKICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICBfdm0uZm9ydW1fdHlwZSA9ICLguIHguLLguKPguKXguIfguJfguLDguYDguJrguLXguKLguJkiCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbX3ZtLl92KCLguIHguLLguKPguKXguIfguJfguLDguYDguJrguLXguKLguJkiKV0KICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImJ0biIsCiAgICAgICAgICAgICAgICAgICAgY2xhc3M6IHsKICAgICAgICAgICAgICAgICAgICAgICJidG4tcHJpbWFyeSI6IF92bS5mb3J1bV90eXBlID09ICLguJfguLjguJnguIHguLLguKPguKjguLbguIHguKnguLIiLAogICAgICAgICAgICAgICAgICAgICAgImJ0bi1zZWNvbmRhcnkiOiBfdm0uZm9ydW1fdHlwZSAhPSAi4LiX4Li44LiZ4LiB4Liy4Lij4Lio4Li24LiB4Lip4LiyIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJ0eXBlX2J1dHRvbiIgfSwKICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICBfdm0uZm9ydW1fdHlwZSA9ICLguJfguLjguJnguIHguLLguKPguKjguLbguIHguKnguLIiCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbX3ZtLl92KCLguJfguLjguJnguIHguLLguKPguKjguLbguIHguKnguLIiKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfdm0uJHYuZm9ydW1fdHlwZS4kZXJyb3IKICAgICAgICAgICAgICAgID8gWwogICAgICAgICAgICAgICAgICAgICFfdm0uJHYuZm9ydW1fdHlwZS5yZXF1aXJlZAogICAgICAgICAgICAgICAgICAgICAgPyBfYygicCIsIHsgYXR0cnM6IHsgaWQ6ICJlcnJvci1tZXNzYWdlIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIirguIHguKPguLjguJPguLLguYDguJXguLTguKHguILguYnguK3guKHguLnguKXguYPguJnguIrguYjguK3guIfguJnguLXguYkiKQogICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiZm9ybS1ncm91cCByb3ciIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJsYWJlbCIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjb2wtc20tMyBjb2wtZm9ybS1sYWJlbCIsCiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBmb3I6ICJpbnB1dHRvcGljIiB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCJMaW5rIOC4o+C4ueC4m+C4oOC4suC4nuC4m+C4o+C4sOC4geC4reC4miIpXQogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC1zbS05IiB9LCBbCiAgICAgICAgICAgICAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1tb2RlbCIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS4kdi5pbWFnZV9hZGRyZXNzLiRtb2RlbCwKICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiJHYuaW1hZ2VfYWRkcmVzcy4kbW9kZWwiCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImZvcm0tY29udHJvbCIsCiAgICAgICAgICAgICAgICAgICAgICBjbGFzczogeyAiaXMtaW52YWxpZCI6IF92bS4kdi5pbWFnZV9hZGRyZXNzLiRlcnJvciB9LAogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogInRleHQiLAogICAgICAgICAgICAgICAgICAgICAgICBpZDogImlucHV0dG9waWMiLAogICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogIuC5g+C4quC5iOC4peC4tOC5ieC4h+C4hOC5jOC4l+C4teC5iOC4meC4teC5iCIKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBkb21Qcm9wczogeyB2YWx1ZTogX3ZtLiR2LmltYWdlX2FkZHJlc3MuJG1vZGVsIH0sCiAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICBpbnB1dDogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHYuaW1hZ2VfYWRkcmVzcywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICIkbW9kZWwiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnRhcmdldC52YWx1ZQogICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfdm0uJHYuaW1hZ2VfYWRkcmVzcy4kZXJyb3IKICAgICAgICAgICAgICAgICAgICA/IFsKICAgICAgICAgICAgICAgICAgICAgICAgIV92bS4kdi5pbWFnZV9hZGRyZXNzLnJlcXVpcmVkCiAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygicCIsIHsgYXR0cnM6IHsgaWQ6ICJlcnJvci1tZXNzYWdlIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIq4LiB4Lij4Li44LiT4Liy4LmA4LiV4Li04Lih4LiC4LmJ4Lit4Lih4Li54Lil4LmD4LiZ4LiK4LmI4Lit4LiH4LiZ4Li14LmJIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgICAgICAgICAgIV92bS4kdi5pbWFnZV9hZGRyZXNzLnVybAogICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoInAiLCB7IGF0dHJzOiB7IGlkOiAiZXJyb3ItbWVzc2FnZSIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiKuC4leC5ieC4reC4h+C5g+C4quC5iOC5gOC4m+C5h+C4mSB1cmwg4LmA4LiX4LmI4Liy4LiZ4Lix4LmJ4LiZIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAyCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygiYnIiKSwKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImZvcm0tZ3JvdXAiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJwIiwgW192bS5fdigi4Lib4Lij4Liw4LmA4Lig4LiXIildKSwKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAiYnV0dG9uIiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiYnRuIGJ0bi1zdWNjZXNzIiwKICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBpZDogInN1Ym1pdF9idG4iLCAiZGF0YS1kaXNtaXNzIjogIm1vZGFsIiB9LAogICAgICAgICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0ucmVhbGVkaXQgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbX3ZtLl92KCLguYHguIHguYnguYTguIIiKV0KICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImJ0biBidG4tc2Vjb25kYXJ5IiwKICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBpZDogInN1Ym1pdF9idG4iLCAiZGF0YS1kaXNtaXNzIjogIm1vZGFsIiB9LAogICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uY2xvc2VfbW9kYWxfYnV0dG9uKCkKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIuC4m+C4tOC4lCIpXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDIKICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdCiAgICApLAogICAgX2MoCiAgICAgICJkaXYiLAogICAgICB7CiAgICAgICAgc3RhdGljQ2xhc3M6ICJtb2RhbCBmYWRlIiwKICAgICAgICBhdHRyczogewogICAgICAgICAgaWQ6ICJkZWxldGVmb3J1bSIsCiAgICAgICAgICB0YWJpbmRleDogIi0xIiwKICAgICAgICAgIHJvbGU6ICJkaWFsb2ciLAogICAgICAgICAgImFyaWEtbGFiZWxsZWRieSI6ICJleGFtcGxlTW9kYWxMYWJlbCIsCiAgICAgICAgICAiYXJpYS1oaWRkZW4iOiAidHJ1ZSIKICAgICAgICB9CiAgICAgIH0sCiAgICAgIFsKICAgICAgICBfYygKICAgICAgICAgICJkaXYiLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogIm1vZGFsLWRpYWxvZyIsIGF0dHJzOiB7IHJvbGU6ICJkb2N1bWVudCIgfSB9LAogICAgICAgICAgWwogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm1vZGFsLWNvbnRlbnQiIH0sIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm1vZGFsLWhlYWRlciIgfSwgWwogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJoNSIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm1vZGFsLXRpdGxlIiwKICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBpZDogImV4YW1wbGVNb2RhbExhYmVsIiB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIuC4leC5ieC4reC4h+C4geC4suC4o+C4peC4muC4guC5iOC4suC4p+C4m+C4o+C4sOC4iuC4suC4quC4seC4oeC4nuC4seC4meC4mOC5jOC5gOC4o+C4t+C5iOC4reC4hyIpLAogICAgICAgICAgICAgICAgICAgIF9jKCJiciIpLAogICAgICAgICAgICAgICAgICAgIF92bS5fdignIicgKyBfdm0uX3MoX3ZtLmZvcnVtX3RvcGljKSArICciIOC4q+C4o+C4t+C4reC5hOC4oeC5iCcpCiAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICBfdm0uX20oMikKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm1vZGFsLWZvb3RlciIgfSwgWwogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJidG4gYnRuLXNlY29uZGFyeSIsCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogImJ1dHRvbiIsICJkYXRhLWRpc21pc3MiOiAibW9kYWwiIH0sCiAgICAgICAgICAgICAgICAgICAgb246IHsgY2xpY2s6IF92bS5jbG9zZV9tb2RhbF9idXR0b24gfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbX3ZtLl92KCLguJvguLTguJQiKV0KICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImJ0biBidG4tZGFuZ2VyIiwKICAgICAgICAgICAgICAgICAgICBhdHRyczogeyB0eXBlOiAiYnV0dG9uIiwgImRhdGEtZGlzbWlzcyI6ICJtb2RhbCIgfSwKICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnJlYWxkZWxldGUoKQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgW192bS5fdigi4Lil4LiaIildCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgXSkKICAgICAgICAgIF0KICAgICAgICApCiAgICAgIF0KICAgICksCiAgICBfdm0uX20oMykKICBdKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogIi9hZG1pbiIgfSB9LCBbCiAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgc3RhdGljU3R5bGU6IHsgInBhZGRpbmctbGVmdCI6ICIyMHB4IiB9LAogICAgICAgIGF0dHJzOiB7CiAgICAgICAgICBzcmM6ICIvaW1hZ2UvbmF2YmFyL25ld2xvZ28ucG5nIiwKICAgICAgICAgIHdpZHRoOiAiMTEwcHgiLAogICAgICAgICAgaGVpZ2h0OiAiYXV0byIsCiAgICAgICAgICBhbHQ6ICIiCiAgICAgICAgfQogICAgICB9KQogICAgXSkKICB9LAogIGZ1bmN0aW9uKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoInRoZWFkIiwgWwogICAgICBfYygidHIiLCBbCiAgICAgICAgX2MoInRoIiwgeyBhdHRyczogeyBpZDogInRhYmxlX2hlYWQiIH0gfSwgW192bS5fdigiRm9ydW0gSUQiKV0pLAogICAgICAgIF9jKCJ0aCIsIHsgYXR0cnM6IHsgY29sc3BhbjogIjIiLCBpZDogInRhYmxlX2hlYWQiIH0gfSwgWwogICAgICAgICAgX3ZtLl92KCJGb3J1bSBUaXRsZSIpCiAgICAgICAgXSksCiAgICAgICAgX2MoInRoIiwgeyBhdHRyczogeyBpZDogInRhYmxlX2hlYWQiIH0gfSwgWwogICAgICAgICAgX3ZtLl92KCJGb3J1bSBwaWN0dXJlIGxpbmsiKQogICAgICAgIF0pLAogICAgICAgIF9jKCJ0aCIsIHsgYXR0cnM6IHsgY29sc3BhbjogIjIiLCBpZDogInRhYmxlX2hlYWQiIH0gfSwgWwogICAgICAgICAgX3ZtLl92KCJBY3Rpb24iKQogICAgICAgIF0pCiAgICAgIF0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygKICAgICAgImJ1dHRvbiIsCiAgICAgIHsKICAgICAgICBzdGF0aWNDbGFzczogImNsb3NlIiwKICAgICAgICBhdHRyczogewogICAgICAgICAgdHlwZTogImJ1dHRvbiIsCiAgICAgICAgICAiZGF0YS1kaXNtaXNzIjogIm1vZGFsIiwKICAgICAgICAgICJhcmlhLWxhYmVsIjogIkNsb3NlIgogICAgICAgIH0KICAgICAgfSwKICAgICAgW19jKCJzcGFuIiwgeyBhdHRyczogeyAiYXJpYS1oaWRkZW4iOiAidHJ1ZSIgfSB9LCBbX3ZtLl92KCLDlyIpXSldCiAgICApCiAgfSwKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJmb290ZXIiLCB7IGF0dHJzOiB7IGlkOiAiZm9vdGVyIiB9IH0sIFsKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyb3ciIH0sIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC1tZC01IiB9KSwKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC1tZC01IiB9LCBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImNvcHlyaWdodCIsCiAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsgInBhZGRpbmctdG9wIjogIjIwcHgiLCBjb2xvcjogIiNhYWEiIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgW192bS5fdigiIENvcHlyaWdodCDCqSAyMDIxIEV4cHRpb25LTUlUTCAiKV0KICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdKQogICAgXSkKICB9Cl0KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}