{"remainingRequest":"C:\\Users\\Prathan\\Desktop\\code\\webpro\\ExceptionKMITL\\Last Web\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Prathan\\Desktop\\code\\webpro\\ExceptionKMITL\\Last Web\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Prathan\\Desktop\\code\\webpro\\ExceptionKMITL\\Last Web\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Prathan\\Desktop\\code\\webpro\\ExceptionKMITL\\Last Web\\frontend\\src\\views\\forum_manage.vue?vue&type=template&id=f5b3ec46&","dependencies":[{"path":"C:\\Users\\Prathan\\Desktop\\code\\webpro\\ExceptionKMITL\\Last Web\\frontend\\src\\views\\forum_manage.vue","mtime":1620103550922},{"path":"C:\\Users\\Prathan\\Desktop\\code\\webpro\\ExceptionKMITL\\Last Web\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1619237951333},{"path":"C:\\Users\\Prathan\\Desktop\\code\\webpro\\ExceptionKMITL\\Last Web\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1619237967429},{"path":"C:\\Users\\Prathan\\Desktop\\code\\webpro\\ExceptionKMITL\\Last Web\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1619237951333},{"path":"C:\\Users\\Prathan\\Desktop\\code\\webpro\\ExceptionKMITL\\Last Web\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1619237967429}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}