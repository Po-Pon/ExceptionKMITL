{"remainingRequest":"C:\\Users\\Prathan\\Desktop\\code\\webpro\\ExceptionKMITL\\Last Web\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Prathan\\Desktop\\code\\webpro\\ExceptionKMITL\\Last Web\\frontend\\src\\views\\register.vue?vue&type=template&id=77453986&scoped=true&","dependencies":[{"path":"C:\\Users\\Prathan\\Desktop\\code\\webpro\\ExceptionKMITL\\Last Web\\frontend\\src\\views\\register.vue","mtime":1620128512639},{"path":"C:\\Users\\Prathan\\Desktop\\code\\webpro\\ExceptionKMITL\\Last Web\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1619237951333},{"path":"C:\\Users\\Prathan\\Desktop\\code\\webpro\\ExceptionKMITL\\Last Web\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1619237967429},{"path":"C:\\Users\\Prathan\\Desktop\\code\\webpro\\ExceptionKMITL\\Last Web\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1619237951333},{"path":"C:\\Users\\Prathan\\Desktop\\code\\webpro\\ExceptionKMITL\\Last Web\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1619237967429}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}